#include <stdio.h>
#include <string.h>

void BinaryToText(char *inputFile, char *outputFile) {
    unsigned char str[256];
    unsigned int num;  // assuming 32 bit ints
    int i, len;

    FILE *finp = fopen(inputFile, "rb");
    FILE *fout = fopen(outputFile, "w");

    while ((len = fgetc(finp)) != EOF) {
        fread(str, len, 1, finp);
        str[len] = '\0';
        num  = (unsigned int)fgetc(finp) << 24;
        num |= fgetc(finp) << 16;
        num |= fgetc(finp) << 8;
        num |= fgetc(finp);
        fprintf(fout, "%s %d\n", (char*)str, num);
    }
    fclose(finp);
    fclose(fout);
}}
 Just a starting point for the file convertor. Still trying to wrap my head around it but this is a basic binary to text file convertor, 
 if you guys could look at this and try to adjust it to fit the project's binary code that would be awesome, i think it said it takes it 
 in argv which ive been trying to do but be careful, if you compile using gcc -o fileconvertor.c (binary file) it for some reason
 deletes the c file. Let me know if you guys have any luck.
